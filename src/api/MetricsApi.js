/*
 * Klaviyo API (Beta)
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2022-09-07.pre
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient.js";

/**
* Metrics service.
* @module api/MetricsApi
* @version 2022-09-07.pre
*/
export class MetricsApi {
    apiClient

    /**
    * Constructs a new MetricsApi. 
    * @alias module:api/MetricsApi
    * @class
    * @param {ApiClient#instance} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Get Metric
     * Get a specific Metric by id&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;
     * @param {<&vendorExtensions.x-jsdoc-type>} id 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} opts.fieldsMetric For more information please visit https://developers.klaviyo.com/en/v2022-09-07.pre/reference/api-overview#filtering
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    getMetric = async (id, opts) => {

    opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getMetric");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[metric]': this.apiClient.buildCollectionParam(opts['fieldsMetric'], 'csv')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Klaviyo-API-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/api/metrics/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      ).then(function(response_and_data) {
          return response_and_data.data;
      });
    }

    /**
     * Get Metric Aggregate
     * Query &amp; aggregate event data associated with specific metrics, optionally filtering &amp; grouping results by time, event or profile dimensions. &lt;/br&gt; This endpoint lets you form queries in your &#x60;POST&#x60; request body rather than query parameters for simpler query syntax. &lt;/br&gt; **Request body parameters** (all nested under &#x60;attributes&#x60;): * &#x60;return_fields&#x60;: Provide fields to limit the returned data * &#x60;sort&#x60;: Provide a sort key (e.g. &#x60;\&quot;-timestamp\&quot;&#x60;) * &#x60;page_cursor&#x60;: Optional pagination cursor to iterate over large result sets * &#x60;measurement&#x60;: Measurement key, e.g &#x60;\&quot;sum\&quot;&#x60;, &#x60;\&quot;sum_value\&quot;&#x60;, &#x60;\&quot;count\&quot;&#x60; * &#x60;interval&#x60;: Aggregation interval, e.g. &#x60;\&quot;hour\&quot;&#x60;,&#x60;\&quot;day\&quot;&#x60;,&#x60;\&quot;week\&quot;&#x60;,&#x60;\&quot;month\&quot;&#x60; * &#x60;page_size&#x60;: Limit the number of returned results * &#x60;by&#x60;: Optional attribute(s) used for grouping by the aggregation function * &#x60;metric_id&#x60;: The metric ID used in the aggregation * &#x60;filter&#x60;: List of filters, must include time range using ISO 8601 format (&#x60;\&quot;YYYY-MM-DDTHH:MM:SS.mmmmmm\&quot;&#x60;) * &#x60;timezone&#x60;: The timezone used for processing the query &lt;/br&gt; For a comprehensive list of native Klaviyo metrics and their associated attributes for grouping &amp; filtering, please refer to our [Native Klaviyo Metrics &amp; Attributes](https://developers.klaviyo.com/en/reference/klaviyo-metrics-attributes) guide for our V1 APIs.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;
     * @param {<&vendorExtensions.x-jsdoc-type>} body Retrieve Metric Aggregations
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    getMetricAggregate = async (body) => {

    
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling getMetricAggregate");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Klaviyo-API-Key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/api/metric-aggregates/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      ).then(function(response_and_data) {
          return response_and_data.data;
      });
    }

    /**
     * Get Metrics
     * Returns a list of all Metric objects in an account, that can optionally be filtered by integration name and/or category.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} opts.fieldsMetric For more information please visit https://developers.klaviyo.com/en/v2022-09-07.pre/reference/api-overview#filtering
     * @param {String} opts.pageCursor For more information please visit https://developers.klaviyo.com/en/v2022-09-07.pre/reference/api-overview#pagination
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    getMetrics = async (opts) => {

    opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'fields[metric]': this.apiClient.buildCollectionParam(opts['fieldsMetric'], 'csv'),'page[cursor]': opts['pageCursor']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Klaviyo-API-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/api/metrics/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      ).then(function(response_and_data) {
          return response_and_data.data;
      });
    }

}